const pool = require('../config/database');

const authController = {
  async telegramAuth(req, res) {
    console.log('üéØ authController.telegramAuth called');

    try {
      const { user, initData } = req.body;

      if (!user || !user.id) {
        return res.status(400).json({
          success: false,
          error: 'Invalid user data'
        });
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      const checkUser = await pool.query(
        'SELECT * FROM users WHERE telegram_id = $1',
        [user.id.toString()]
      );

      let userData;
      let isNewUser = false;

      if (checkUser.rows.length === 0) {
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å is_premium = false –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        const insertUser = await pool.query(
          `INSERT INTO users (
             telegram_id, username, first_name, last_name, language, is_premium, photo_url
           ) VALUES ($1, $2, $3, $4, $5, $6, $7)
           RETURNING *`,
          [
            user.id.toString(),
            user.username || null,
            user.first_name || '',
            user.last_name || '',
            user.language_code || 'en',
            false, // –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç —Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞
            user.photo_url || null
          ]
        );

        userData = insertUser.rows[0];
        isNewUser = true;
      } else {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ù–ï —Ç—Ä–æ–≥–∞–µ–º is_premium!)
        const updateUser = await pool.query(
          `UPDATE users SET
             username = $2,
             first_name = $3,
             last_name = $4,
             language = $5,
             photo_url = $6
           WHERE telegram_id = $1
           RETURNING *`,
          [
            user.id.toString(),
            user.username || checkUser.rows[0].username,
            user.first_name || checkUser.rows[0].first_name,
            user.last_name || checkUser.rows[0].last_name,
            user.language_code || checkUser.rows[0].language || 'en',
            user.photo_url || checkUser.rows[0].photo_url
          ]
        );

        userData = updateUser.rows[0];
      }

      // –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      console.log('üéØ User data being sent:', {
        id: userData.id,
        telegram_id: userData.telegram_id,
        is_premium: userData.is_premium,
        username: userData.username
      });

      res.json({
        success: true,
        user: userData,
        isNewUser
      });
    } catch (error) {
      console.error('üí• Auth error:', error);
      res.status(500).json({
        success: false,
        error: 'Internal server error',
        details: process.env.NODE_ENV !== 'production' ? error.message : undefined
      });
    }
  }
};


module.exports = authController;
